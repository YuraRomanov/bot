from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext
from config import TOKEN, MASTER_IDS
from database import connect_db

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def get_keyboard(role):
    if role == '–ú–∞—Å—Ç–µ—Ä':
        buttons = [['‚úÖ –í—ã–¥–∞—Ç—å –∑–∞–¥–∞–Ω–∏–µ', 'üìã –°–ø–∏—Å–æ–∫ —Ä–∞–±–æ—á–∏—Ö'],
                   ['üóëÔ∏è –û–±–Ω—É–ª–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å', '‚ùå –£–¥–∞–ª–∏—Ç—å —Ä–∞–±–æ—á–µ–≥–æ'],
                   ['üìä –î–µ—Ç–∞–ª–∏ –ø–æ —Ä–∞–±–æ—á–µ–º—É']]
    else:
        buttons = [['üì• –ü–æ–ª—É—á–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ', '‚ûï –î–æ–±–∞–≤–∏—Ç—å –¥–µ—Ç–∞–ª—å'],
                   ['üîß –ó–∞—è–≤–∫–∞ –Ω–∞ —Ä–µ–º–æ–Ω—Ç —Å—Ç–∞–Ω–∫–∞', 'üìû –í—ã–∑–æ–≤ –º–∞—Å—Ç–µ—Ä–∞'],
                   ['üìä –ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å']]
    return ReplyKeyboardMarkup(buttons, resize_keyboard=True)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
def start(update: Update, context: CallbackContext):
    user_id = update.message.from_user.id
    role = '–ú–∞—Å—Ç–µ—Ä' if user_id in MASTER_IDS else '–†–∞–±–æ—á–∏–π'
    update.message.reply_text(f"–ü—Ä–∏–≤–µ—Ç, {role}!", reply_markup=get_keyboard(role))

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
def handle_message(update: Update, context: CallbackContext):
    text = update.message.text
    user_id = update.message.from_user.id

    if text == 'üì• –ü–æ–ª—É—á–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ':
        update.message.reply_text('–ü–æ–ª—É—á–∏–ª –∑–∞–¥–∞–Ω–∏–µ ‚úÖ')
    elif text == '‚ûï –î–æ–±–∞–≤–∏—Ç—å –¥–µ—Ç–∞–ª—å':
        update.message.reply_text('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–µ—Ç–∞–ª–∏:')
    elif text == 'üîß –ó–∞—è–≤–∫–∞ –Ω–∞ —Ä–µ–º–æ–Ω—Ç —Å—Ç–∞–Ω–∫–∞':
        update.message.reply_text('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Å—Ç–∞–Ω–∫–∞ –∏ –ø—Ä–∏—á–∏–Ω—É –ø–æ–ª–æ–º–∫–∏:')
    elif text == 'üìû –í—ã–∑–æ–≤ –º–∞—Å—Ç–µ—Ä–∞':
        update.message.reply_text('üîî –ú–∞—Å—Ç–µ—Ä –≤—ã–∑–≤–∞–Ω!')

    elif text == '‚úÖ –í—ã–¥–∞—Ç—å –∑–∞–¥–∞–Ω–∏–µ':
        update.message.reply_text('–í–≤–µ–¥–∏—Ç–µ –¥–µ—Ç–∞–ª—å, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏ —Å—Ä–æ–∫:')
    elif text == 'üìã –°–ø–∏—Å–æ–∫ —Ä–∞–±–æ—á–∏—Ö':
        update.message.reply_text('üõ†Ô∏è –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ä–∞–±–æ—á–∏—Ö')
    elif text == 'üóëÔ∏è –û–±–Ω—É–ª–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å':
        update.message.reply_text('–ü—Ä–æ–≥—Ä–µ—Å—Å —Ä–∞–±–æ—á–∏—Ö –æ–±–Ω—É–ª—ë–Ω üî•')
    elif text == '‚ùå –£–¥–∞–ª–∏—Ç—å —Ä–∞–±–æ—á–µ–≥–æ':
        update.message.reply_text('–í–≤–µ–¥–∏—Ç–µ ID —Ä–∞–±–æ—á–µ–≥–æ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:')
    elif text == 'üìä –î–µ—Ç–∞–ª–∏ –ø–æ —Ä–∞–±–æ—á–µ–º—É':
        update.message.reply_text('–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–±–æ—á–µ–≥–æ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –µ–≥–æ –¥–µ—Ç–∞–ª–µ–π:')
    elif text == 'üìä –ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å':
        update.message.reply_text('–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ –¥–µ—Ç–∞–ª—è–º:')

def main():
    updater = Updater(TOKEN)
    dispatcher = updater.dispatcher

    dispatcher.add_handler(CommandHandler('start', start))
    dispatcher.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_message))

    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()